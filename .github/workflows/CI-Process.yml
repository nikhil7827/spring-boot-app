name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Run Tests
        run: mvn test

      - name: Upload built jar
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/spring-boot-app-0.0.1-SNAPSHOT.jar

      # Add JFrog steps below
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ secrets.JFROG_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JFROG_API_KEY }}  # Use access token or password
          JF_USER: ${{ secrets.JFROG_USERNAME }}

      - name: Configure JFrog CLI
        run: |
          jf config add artifactory-server \
            --url=${{ secrets.JFROG_URL }} \
            --user=${{ secrets.JFROG_USERNAME }} \
            --password=${{ secrets.JFROG_API_KEY }} \
            --interactive=false
          jf config use artifactory-server

      - name: Upload JAR to JFrog Artifactory
        run: |
          jf rt upload "target/spring-boot-app-0.0.1-SNAPSHOT.jar" "libs-release-local/" \
            --build-name="spring-boot-app" \
            --build-number=${{ github.run_number }}

      - name: Publish Build Info (Optional)
        run: |
          jf rt build-publish "spring-boot-app" ${{ github.run_number }}
